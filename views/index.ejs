<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/quill@2.0.2/dist/quill.snow.css" rel="stylesheet" />

  <title>Document</title>
</head>

<body>

  <div id="editor">

  </div>
  <button id="submit">Submit</button>

  <div>
    <% Array.from(notes).forEach(note => { %>
    <%- note.note %>
    <% }) %>
  </div>

  <!-- Include the Quill library -->
  <script src="https://cdn.jsdelivr.net/npm/quill@2.0.2/dist/quill.js"></script>

  <!-- Initialize Quill editor -->
  <script>
    const toolbarOptions = [
      ['bold', 'italic', 'underline', 'strike'], // toggled buttons
      ['code-block'],
      [{
        'header': 1
      }, {
        'header': 2
      }], // custom button values
      [{
        'list': 'ordered'
      }, {
        'list': 'bullet'
      }, {
        'list': 'check'
      }],

      [{
        'indent': '-1'
      }, {
        'indent': '+1'
      }], // outdent/indent
      [{
        'direction': 'rtl'
      }], // text direction

      [{
        'size': ['small', false, 'large', 'huge']
      }], // custom dropdown
      [{
        'header': [1, 2, 3, 4, 5, 6, false]
      }],

      [{
        'color': []
      }, {
        'background': []
      }], // dropdown with defaults from theme
      [{
        'font': []
      }],
      [{
        'align': []
      }],
      ['clean'] // remove formatting button
    ];
    const quill = new Quill('#editor', {
      theme: 'snow',
      modules: {
        toolbar: toolbarOptions
      }

    });
    document.getElementById('submit').addEventListener('click', function() {
      const content = quill.root.innerHTML; // Get the HTML content from the editor
      fetch('/api/v1/note/', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            note: content
          })
        })
        .then(response => response.json())
        .then(data => {
          console.log('Success:', data);
        })
        .catch((error) => {
          console.error('Error:', error);
        });
    });
  </script>

</body>





</html>

<!-- <script>
    <form method="post" action="/api/v1/users/logIn">
    <label for="email">Email:</label>
    <input type="email" id="email" name="email" required>
    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required>
    <input type="submit" value="Submit">
  </form>

  <button type="button" class="pay">pay</button>

  const pay = document.querySelector('.pay');

  pay.addEventListener('click', async () => {
    try {
      const response = await fetch('/api/v1/payment/paymob/initiate', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          amount: 1000,
          currency: 'EGP',
          customer: {
            apartment: '12',
            email: 'customer@example.com',
            floor: '1',
            first_name: 'John',
            street: 'Main St',
            building: '123',
            phone_number: '+201143776030',
            shipping_method: 'NA',
            postal_code: '12345',
            city: 'Cairo',
            country: 'EGY',
            last_name: 'Doe',
            state: 'Cairo'
          }
        })
      });

      if (!response.ok) {
        throw new Error('Failed to initiate payment');
      }

      const data = await response.json();
      const paymentKey = data.paymentKey;

      // Redirect to the payment page
      window.location.href = `https://accept.paymob.com/api/acceptance/iframes/859570?payment_token=${paymentKey}`;
    } catch (error) {
      console.error('Error initiating payment:', error.message);
    }
  });
</script> -->